#!/usr/bin/env python3

frequency:dict = {
    'a' : 8.167,
    'b' : 1.492,
    'c' : 2.782,
    'd' : 4.253,
    'e' : 12.702,
    'f' : 2.228,
    'g' : 2.015,
    'h' : 6.094,
    'i' : 6.966,
    'j' : 0.153,
    'k' : 0.772,
    'l' : 4.025,
    'm' : 2.406,
    'n' : 6.749,
    'o' : 7.507,
    'p' : 1.929,
    'q' : 0.095,
    'r' : 5.987,
    's' : 6.327,
    't' : 9.056,
    'u' : 2.758,
    'v' : 0.978,
    'w' : 2.360,
    'x' : 0.150,
    'y' : 1.974,
    'z' : 0.074,
}

with open("morituri.enc", "r") as f:
    secret = f.read().strip()
    f.close()

def analyze(text) -> dict:
    freq:dict = {}
    # Count the frequency of each character
    for c in text:
        if c in freq:
            freq[c] += 1.0
        else:
            freq[c] = 1.0
    # Normalize the frequency
    for c in freq:
        freq[c] *= 100/len(text)
    return freq

def get_closest_char(freq:float) -> str:
    closest:str = None
    diff:float = 100.0
    for c in frequency:
        if abs(frequency[c] - freq) < diff:
            #print(frequency[c], freq)
            diff = abs(frequency[c] - freq)
            closest = c
    #print(freq, closest)
    return closest

def get_key(char:str, val:float) -> str:
    key = abs(ord(char) - ord(get_closest_char(val)))
    return key

def get_most_common_char(freq:dict) -> str:
    max_freq = 0
    max_char = None
    for c in freq:
        if freq[c] > max_freq:
            max_freq = freq[c]
            max_char = c
    return max_char

def encrypt(plain:str, shift:int) -> str:
    encrypted = []
    for char in plain:
        if char.isalpha():
            shift_base = ord('A') if char.isupper() else ord('a')
            encrypted.append(chr((ord(char) - shift_base + shift) % 26 + shift_base))
        else:
            #encrypted.append(char)
            pass
    return ''.join(encrypted)

def decrypt_caesar(cipher:str, shift:int) -> str:
    return encrypt(cipher, -shift)

def decrypt(text:str) -> str:
    freq = analyze(text)
    most_common = get_most_common_char(freq)
    key = get_key(most_common, freq[most_common])
    return decrypt_caesar(text, 24)

def find_flag(text:str) -> str:
    keyword:str = "VEXILLUM"
    flag:str = text.split(keyword)[1]
    return flag

def main():
    #print(frequency)
    #print(secret)
    text = decrypt(secret)
    print(text)
    flag = "flag{" + find_flag(text) +'}'
    print(flag)
    #with open("flag.txt", "w") as f:
    #    f.write(flag)
    #    f.close()

if __name__ == "__main__":
    main()